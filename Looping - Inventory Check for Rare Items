In a warehouse management system, rare items are considered special if their item ID is a Strong Number. A Strong Number is a number in which the sum of the factorial of each digit is equal to the number itself. Your task is to create a program that checks whether the given item ID is a Strong Number or not.

Imagine a warehouse manager who needs to quickly identify rare items for cataloging. If an item ID is a Strong Number, it should be flagged as "Rare Item," otherwise, it should be marked as "Common Item."

Input Format

The first line of input contains an integer N, which represents the item ID.

Constraints

NA

Output Format

Print "Rare Item" if the item ID is a Strong Number. Print "Common Item" if the item ID is not a Strong Number.

Sample Input 0

145
Sample Output 0

Rare Item
Explanation 0

The digits of 145 are 1, 4, and 5.
The factorial of 1 is 1, the factorial of 4 is 24, and the factorial of 5 is 120.
The sum of factorials: 1 + 24 + 120 = 145, which is equal to the item ID.
Hence, the item ID 145 is a Strong Number, so the output is "Rare Item."
Sample Input 1

123
Sample Output 1

Common Item
Explanation 1

The digits of 123 are 1, 2, and 3.
The factorial of 1 is 1, the factorial of 2 is 2, and the factorial of 3 is 6.
The sum of factorials: 1 + 2 + 6 = 9, which is not equal to the item ID.
Hence, the item ID 123 is not a Strong Number, so the output is "Common Item."






import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner inp = new Scanner(System.in);
        int n = inp.nextInt();
        int temp = n, sum = 0;
        while (temp > 0) {
            int d = temp % 10;
            sum += fact(d);
            temp /= 10;
        }
        if (sum == n) {
            System.out.println("Rare Item");
        } else {
            System.out.println("Common Item");
        }
    }

    static int fact(int x) {
        int f = 1;
        for (int i = 2; i <= x; i++) {
            f *= i;
        }
        return f;
    }
}
