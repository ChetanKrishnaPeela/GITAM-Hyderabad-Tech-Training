You are managing an inventory system, and you have an array of product IDs. Some of the IDs may be negative, which indicates a faulty product that should be ignored. You need to determine the product ID at the middle of the list, but only considering the positive product IDs. If there are two mid indices after ignoring the negative IDs, you are required to return the element at the smaller index.

Write a function to find and return the product ID at the mid index from the list of positive product IDs, ignoring all negative IDs. If there are two mid indices, return the product ID at the smaller index.

Input Format

The first line contains an integer n, representing the number of product IDs.
The second line contains n integers, representing the product IDs. These can include both positive and negative numbers.
Assumptions

The array will have at least one positive number.
If there are two mid indices after ignoring negative numbers, return the one at the smaller index.
Constraints

NA

Output Format

Print the product ID located at the mid-index of the array after ignoring all negative product IDs.
Sample Input 0

6
11 23 -3 3 -5 -32
Sample Output 0

23
Explanation 0

After removing negative numbers from the array, the positive product IDs are {11, 23, 3}. The middle product ID is 23, which is the mid index of the filtered array.

Sample Input 1

5
-10 -20 -30 -40 -50
Sample Output 1

-1
Explanation 1

All values are negative, so positiveCount=0
Your code checks for this and returns -1 when there are no positive product IDs.






import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        ArrayList<Integer> ans = new ArrayList<>();
        int c=0;
        for(int i=0; i<n; i++)
        {
            arr[i] = sc.nextInt();
        }
        
        for(int i=0; i<n; i++)
        {
            if(arr[i] >= 0) ans.add(arr[i]) ;
        }
        if(ans.size() == 0) 
        {
            System.out.print(-1);
            System.exit(0);
        }
        System.out.print(ans.get(((ans.size())/2)));
    }
}
