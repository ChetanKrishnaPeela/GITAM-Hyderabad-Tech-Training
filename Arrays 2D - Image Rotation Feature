Imagine a photo editing application that allows users to edit and manipulate images. One of the features of this application is to rotate an image by 90 degrees clockwise. The image is represented as an n x n 2D matrix, where each element is a pixel value. Write a program to implement this feature and rotate the image in-place, meaning you have to modify the input matrix directly without using extra space.

Input Format

The first line contains an integer n, representing the dimensions of the square image matrix. The next n lines contain n integers each, representing the pixel values of the image.

Constraints

NA

Output Format

Output the rotated image matrix.

Sample Input 0

3
1 2 3
4 5 6
7 8 9
Sample Output 0

7 4 1
8 5 2
9 6 3
Explanation 0

The original image matrix is:

1 2 3

4 5 6

7 8 9

After rotating the image by 90 degrees clockwise, the updated matrix becomes:

7 4 1

8 5 2

9 6 3

Sample Input 1

2
1 2
3 4
Sample Output 1

3 1
4 2






import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int arr[][] = new int[m][m];
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<m; j++)
            {
                arr[j][m-1-i] = sc.nextInt();
            }
        }
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<m; j++)
            {
                System.out.print(arr[i][j]+" ");
            }
            System.out.println();
        }
    }
}
